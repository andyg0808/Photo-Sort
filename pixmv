#!/usr/bin/perl

#Photosort--A photo-sorting script
#Copyright (C) 2011  andyg0808 

#This program is free software; you can redistribute it and/or
#modify it under the terms of the GNU General Public License
#as published by the Free Software Foundation; either version 2
#of the License, or (at your option) any later version.

#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.

#You should have received a copy of the GNU General Public License
#along with this program; if not, write to the Free Software
#Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

use strict;
use warnings;

#The regexp should match both the orig. filenames from exiv2 and the filenames this script generates (so it can be used on pre-existing sorted files)
if($ARGV[0] =~ m<^(?:.*/)?([0-9]{4})-?([0-9]{2})-?([0-9]{2})(?:_| )([0-9]{2})(?::|-)?([0-9]{2})(?::|-)?([0-9]{2})(_[0-9]+)?.(.*)$>i){

#Scope variable
my $dir;

#Generate the directory name to create. Uses second argument if present for the root of the new tree
if($ARGV[1]) {
	$dir="$ARGV[1]/$1/$2/";
} else {
	$dir="./$1/$2/";
}

#Generate the filename to rename to
#Base name of file
my $basename="$1-$2-$3_$4-$5-$6";
#File extension
my $ext=lc($8);
#New filename
my $fname="${basename}.$ext";

#Create the new dir tree
system "mkdir", "--parents", "$dir";

#Initialize empty suffix
my $suffix=0;

#Check, using the new, improved filename
while(-e "$dir/$fname") {
	#Generate the next filename to try
	$fname="${basename}_$suffix.$ext";
	
	#Increment the suffix
	$suffix++;
}

#Output the path and the name of the renamed file
print "Moving ${ARGV[0]} to $dir/$fname\n";

#Move the file there
exec 'mv', "--no-clobber", "$ARGV[0]", "$dir/$fname";
}

